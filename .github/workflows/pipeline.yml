name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  simple_deployment_pipeline:
    runs-on: ubuntu-latest
    env:
      DEPLOYMENT_URL: https://fullstackphonebook-joyj.onrender.com
      ACTOR: ${{ github.actor }}
      REPOSITORY: ${{ github.repository }}
      COMMIT_SHA: ${{ github.sha }}
      COMMIT_URL: ${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Check style
        run: npm run lint

      - name: e2e tests
        uses: cypress-io/github-action@59810ebfa5a5ac6fcfdcfdf036d1cd4d083a88f2 #(v.6.5.0)
        env:
          PORT: 3001
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          MONGODB_TEST_URI: ${{ secrets.MONGODB_TEST_URI }}
        with:
          command: npm run test:e2e
          start: npm run start:test
          wait-on: http://localhost:3001
        if: ${{ !env.ACT }} # skipped when run using nektos/act since the default medium image does not contain xvfb which is required by cypress

      - name: Revision number
        id: revision
        run: echo "REVISION=$(cat config/common.js | grep '^const revision' | cut -d'=' -f 2 | cut -d "'" -f 2)" >> $GITHUB_ENV

      - name: Initiate deployment
        id: init_deploy
        run: curl "${{ secrets.RENDER_DEPLOY_HOOK_URL }}"
        if: ${{ github.event_name == 'push' && !env.ACT }}

      - name: Poll deployment success
        id: deploy_success
        uses: artiz/poll-endpoint@bebf08f9b9a25eda76824c4d0cae895cdee684aa # (v1.0.2)
        with:
          url: ${{ env.DEPLOYMENT_URL }}/api/revision
          method: GET
          expectStatus: 200
          expectBody: '${{ env.REVISION }}'
          timeout: 300000
          interval: 10000
        if: ${{ steps.init_deploy.outcome == 'success' }}

      - name: Notify when a new version is deployed
        if: ${{ steps.deploy_success.outcome == 'success' }}
        uses: rjstone/discord-webhook-notify@89b0bf43c2c8514f70d0dcba4a706b904e8a3112 # (v1.0.4)
        with:
          severity: info
          avatarUrl: https://github.githubassets.com/images/modules/logos_page/Octocat.png
          description: At ${{ env.DEPLOYMENT_URL }} by ${{ env.ACTOR }}.
          text: A new version of ${{ env.REPOSITORY }} deployed.
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}

      - name: Notify when a build fails
        if: ${{ failure() }}
        uses: rjstone/discord-webhook-notify@89b0bf43c2c8514f70d0dcba4a706b904e8a3112 # (v1.0.4)
        with:
          severity: error
          avatarUrl: https://github.githubassets.com/images/modules/logos_page/Octocat.png
          description: Commit [${{ env.COMMIT_SHA }}](${{ env.COMMIT_URL }}) by ${{ env.ACTOR }}.
          text: ${{ env.REPOSITORY }} build failed.
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
